{"version":3,"sources":["components/Titles.js","components/Form.js","components/Weather.js","components/PreviousWeather.js","components/Analytics.js","App.js","index.js"],"names":["Titles","state","className","onClick","this","props","switchWeatherFinder","switchAnalytics","Component","Form","onSubmit","getWeather","name","value","disabled","selected","map","city","Weather","data","icon","date","temp","weatherDescription","imgurl","id","src","alt","PreviousWeather","console","log","style","float","Analytics","isLoading","color","error","class","d","currentCount","historicalCount","SERVER_URL","App","isWeatherDisplay","e","a","preventDefault","target","elements","type","setState","undefined","fetch","api_call","json","responseData","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa730257.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Titles extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"title-container__title\">Weather Forcast</h1>\r\n        <h3 className=\"title-container__subtitle\">\r\n          Find out current and Historical Weather Forcast ...\r\n        </h3>\r\n        <button onClick={this.props.switchWeatherFinder}>Find Weather</button>\r\n        <button onClick={this.props.switchAnalytics}>Analytics</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Titles;\r\n","import React, { Component } from \"react\";\r\nclass Form extends Component {\r\n  state = {};\r\n  render() {\r\n    const cities = [\"Delhi\", \"Mumbai\", \"Lucknow\", \"Raipur\"];\r\n    const type = [\"current\", \"Historical\"];\r\n    return (\r\n      <form onSubmit={this.props.getWeather}>\r\n        <select name=\"city\" className=\"input_select\">\r\n          <option value=\"\" disabled selected>\r\n            Select City\r\n          </option>\r\n          {cities.map((city) => (\r\n            <option value={city}>{city}</option>\r\n          ))}\r\n        </select>\r\n        <select name=\"type\" className=\"input_select\">\r\n          <option value=\"\" disabled selected>\r\n            Select Type\r\n          </option>\r\n          <option value=\"current\">Current</option>\r\n          <option value=\"historical\">Historical</option>\r\n        </select>\r\n        <button>Get Weather</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nclass Weather extends Component {\r\n  state = {};\r\n  render() {\r\n    const { city, date, icon, temp, weatherDescription } = this.props.data;\r\n    const imgurl = `http://openweathermap.org/img/w/${icon}.png`;\r\n    return (\r\n      <div className=\"weather__info\">\r\n        {icon && <img id=\"wicon\" src={imgurl} alt=\"Weather icon\" />}\r\n        {weatherDescription && (\r\n          <span className=\"weather__value\">{weatherDescription}</span>\r\n        )}\r\n        {temp && (\r\n          <p className=\"weather__key\">\r\n            Temperature: <span className=\"weather__value\">{temp}&#8451;</span>\r\n          </p>\r\n        )}\r\n        {city && (\r\n          <p className=\"weather__key\">\r\n            Location:\r\n            <span className=\"weather__value\">{city}</span>\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","import React, { Component } from \"react\";\r\n\r\nconst PreviousWeather = (props) => {\r\n  console.log(\"prvious weather ---->{}\", props);\r\n  const { date, icon, temp, weatherDescription } = props.data;\r\n  return (\r\n    <tr className=\"weather__history\">\r\n      <td>\r\n        <p> {date}</p>\r\n      </td>\r\n      <td>\r\n        <p> {temp}&#8451;</p>\r\n      </td>\r\n      <td>\r\n        <div style={{ float: \"left\" }}>\r\n          <img\r\n            id=\"wicon\"\r\n            src={`http://openweathermap.org/img/w/${icon}.png`}\r\n            alt=\"Weather icon\"\r\n          />\r\n          <p>{weatherDescription}</p>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default PreviousWeather;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Analytics extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"weather__history\">\r\n        <h1> Analytics</h1>\r\n\r\n        {this.props.isLoading && (\r\n          <h3 style={{ color: \"#fff\" }}>Loading .... </h3>\r\n        )}\r\n        {this.props.error && (\r\n          <h3 style={{ color: \"#fff\" }}>{this.props.error}</h3>\r\n        )}\r\n\r\n        {this.props.data && (\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr className=\"weather__history\">\r\n                <th>City</th>\r\n                <th>Current Search</th>\r\n                <th>Historical Search</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.data.map((d) => (\r\n                <tr>\r\n                  <td>{d.city}</td>\r\n                  <td>{d.currentCount}</td>\r\n                  <td>{d.historicalCount}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analytics;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nimport PreviousWeather from \"./components/PreviousWeather\";\nimport Analytics from \"./components/Analytics\";\n\nconst SERVER_URL = \"https://weather-app-forcast.herokuapp.com\";\n\nclass App extends React.Component {\n  state = {\n    isWeatherDisplay: true,\n  };\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const type = e.target.elements.type.value;\n    if (city && type) {\n      this.setState({\n        isLoading: true,\n        data: undefined,\n        error: undefined,\n        type: undefined,\n      });\n      try {\n        const api_call = await fetch(\n          `${SERVER_URL}/api/weather/${type}?city=${city}`\n        );\n        const responseData = await api_call.json();\n        console.log(\"response back from server : {}\", responseData);\n        this.setState({ isLoading: false, data: responseData, type: type });\n      } catch (e) {\n        this.setState({ isLoading: false, error: \"some error occured\" });\n      }\n    } else {\n      this.setState({\n        data: undefined,\n        error: \"please enter city and country\",\n      });\n    }\n  };\n\n  switchWeatherFinder = () => {\n    this.setState({\n      isLoading: false,\n      data: undefined,\n      error: undefined,\n      type: undefined,\n      isWeatherDisplay: true,\n    });\n  };\n\n  switchAnalytics = async () => {\n    this.setState({\n      isLoading: true,\n      data: undefined,\n      error: undefined,\n      type: undefined,\n    });\n    try {\n      const api_call = await fetch(`${SERVER_URL}/api/analytics`);\n      const responseData = await api_call.json();\n      console.log(\"response back from server : {}\", responseData);\n      this.setState({\n        isLoading: false,\n        data: responseData,\n        isWeatherDisplay: false,\n      });\n    } catch (e) {\n      console.log(\"error while fetching analytics : {}\", e);\n      this.setState({\n        isLoading: false,\n        isWeatherDisplay: false,\n        error: \"some error occured\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-xs-5 title-container\">\n                  <Titles\n                    switchWeatherFinder={this.switchWeatherFinder}\n                    switchAnalytics={this.switchAnalytics}\n                  />\n                </div>\n\n                <div className=\"col-xs-6 form-container\">\n                  {this.state.isWeatherDisplay && (\n                    <div>\n                      <Form getWeather={this.getWeather} />\n                      {this.state.isLoading && (\n                        <h3 style={{ color: \"#fff\" }}>Loading .... </h3>\n                      )}\n                      {this.state.error && (\n                        <h3 style={{ color: \"#fff\" }}>{this.state.error}</h3>\n                      )}\n                      {this.state.type === \"current\" && (\n                        <Weather data={this.state.data} />\n                      )}\n                      {this.state.type === \"historical\" && (\n                        <div className=\"table-responsive\">\n                          <table class=\"table\">\n                            <thead>\n                              <tr className=\"weather__history\">\n                                <th>Date</th>\n                                <th>Temperature</th>\n                                <th>Description</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {this.state.data.map((data) => (\n                                <PreviousWeather data={data} />\n                              ))}\n                            </tbody>\n                          </table>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  {!this.state.isWeatherDisplay && (\n                    <Analytics\n                      data={this.state.data}\n                      error={this.state.error}\n                      isLoading={this.state.isLoading}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}